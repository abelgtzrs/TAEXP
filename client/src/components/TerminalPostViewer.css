/* client/src/components/TerminalPostViewer.css */

.terminal-container {
  padding: 1.5rem; 
  background-color: #000000; 
  border: 2px solid #00AA00; /* Darker green for main border */
  border-radius: 5px; 
  box-shadow: 
      inset 0 0 15px rgba(0, 255, 0, 0.25), /* Brighter inset glow */
      0 0 20px rgba(0, 0, 0, 0.7); 
  position: relative; 
  overflow: hidden; 
  color: #00FF00; /* Default bright green text */
  text-shadow: 0 0 2px rgba(0, 255, 0, 0.4); 
  font-family: 'JetBrains Mono', monospace; 
  font-size: 12px; 
  line-height: 1.3; /* Base line-height for the terminal, can be tight */
}

/* Scanlines Effect */
.terminal-container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  background-image: repeating-linear-gradient(
      transparent,
      transparent 1px,
      rgba(0, 40, 0, 0.25) 2px,
      rgba(0, 40, 0, 0.25) 3px
  );
  pointer-events: none; 
  z-index: 1; 
}

/* Ensure content is above scanlines */
.terminal-post-header, 
.terminal-story-content-wrapper, 
.terminal-blessings-section, 
.terminal-edition-footer {
  position: relative;
  z-index: 2;
}

.terminal-post-header {
  text-align: center;
  margin-bottom: 1.5rem; 
}

.terminal-post-title {
  font-family: 'Courier', cursive; 
  color: #00FF00; 
  font-size: 1.9rem; 
  line-height: 1.4; /* Title can have a bit more line height if it wraps */
  margin-bottom: 0.5rem; 
  text-shadow: 0 0 4px #00FF00, 1px 1px #00AA00; 
}

.terminal-story-content-wrapper {
   min-height: 100px; 
   margin-bottom: 1.5rem; /* Space between story and blessings */
}

/* Styles for paragraphs generated by typewriter */
.story-output p {
  margin: 0; /* Remove all default margins */
  /* If you want a tiny gap between each line (even non-paragraph breaks): */
  /* margin-bottom: 1px; */ 
  min-height: 1.2em; /* Ensure lines have some height, adjust based on font-size */
  line-height: 1.2;  /* Make this tight for a terminal look */
  font-size: 0.95em; 
  text-align: left;
}

/* Style for actual paragraph breaks (empty lines in source, rendered as <p>&nbsp;</p>) */
/* This selector targets paragraphs that effectively only contain a non-breaking space */
.story-output p:empty, 
.story-output p:has(> br), /* If you were to use <br> for empty lines */
.story-output p:has(> span:empty) /* If it might render an empty span */
 { 
  /* You can give these a bit more height or bottom margin if &nbsp; isn't enough */
  /* For example, to make them act like a full empty line: */
   min-height: 1.2em; /* Same as other lines to act as one line break */
   /* Or, if you want more pronounced paragraph gaps: */
   /* margin-bottom: 0.6em; */ /* This would add extra space AFTER an empty line */
}
/* A simpler way if your JS reliably makes empty lines <p>&nbsp;</p> */
.story-output p > span:only-child:empty { /* Targets <p><span></span></p> effectively */
    /* Styles for empty lines if they are rendered this way */
}
.story-output p:not(:has(>span.terminal-greentext-line)):not(:has(>hr)) {
    /* This attempts to target paragraphs that are just for spacing (like those with &nbsp;) */
    /* You might need to adjust this selector based on exactly how empty lines are rendered */
    /* margin-bottom: 0.5em; */ /* Add a bit more space for paragraph breaks */
}


.story-output .terminal-greentext-prefix {
  color: #33FF33; 
  font-weight: normal; 
  margin-right: 0.2em; 
}

.story-output .terminal-greentext-line {
  color: #00FF00; 
}

.story-output hr {
  border: 0;
  height: 1px; 
  background-color: #005500; 
  margin: 0.5rem 0; /* Give HRs a little space */
}

.terminal-glitch-effect {
  display: inline-block; 
  animation: glitch 0.1s linear 2; 
}

.terminal-blessings-section {
  margin-top: 1.8rem; /* Reduced from 2rem */
  padding-top: 1rem; 
  border-top: 1px dashed #00AA00; 
  font-size: 0.9em; 
}

.terminal-blessings-intro {
  color: #00FF00; 
  font-family: 'JetBrains Mono', monospace; 
  font-size: 1em; 
  margin-bottom: 0.75rem;
  text-shadow: none; 
}

.terminal-blessings-intro .prompt-prefix { 
  color: #00AA00; 
}

.terminal-blessings-list {
  list-style: none;
  padding-left: 0;
}

.terminal-blessings-list li {
  margin-bottom: 0.3rem; 
  display: flex;
  flex-wrap: wrap; 
}

.terminal-blessing-item-prompt {
  color: #FFFF00; 
  min-width: 15px; 
  display: inline-block;
  font-weight: bold;
}

.terminal-blessing-item-name {
  color: #00FF00; 
  font-family: 'JetBrains Mono', monospace; 
  margin-right: 0.5em; 
}

.terminal-blessing-description {
  color: #00AAAA; 
  font-family: 'JetBrains Mono', monospace; 
  font-style: normal; 
}

.terminal-blessing-description .comment-prefix { 
  color: #008888; 
}

.terminal-edition-footer {
  margin-top: 1.5rem; /* Reduced from 2rem */
  text-align: left;
  font-size: 0.8rem; 
  color: #00AA00; 
  font-family: 'Share Tech Mono', monospace; 
}

#terminal-typing-cursor {
  display: inline-block; 
  background-color: #00FF00;
  width: 7px; 
  height: 1.1em; 
  margin-left: 1px;
  vertical-align: baseline; 
}

/* Global Keyframes (should be in App.css or index.css) */
/*
@keyframes glitch { ... }
@keyframes blink-animation { ... }
*/
